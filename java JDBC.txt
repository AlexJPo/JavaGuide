https://www.youtube.com/watch?v=8-iQDUl10vM&list=PLEAQNNR8IlB4R7NfqBY1frapYo97L6fOQ

1) строка подключения:
jdbc:<dreiver protocol>:<driver connection details>
MS SQL Server - 	jdbc:odbc:DataBaseName
Oracle -  			jdbc:oracle:thin@myserver:1521:DataBaseName
MySQLr -			jdbc:mysql://localhost:3306/DataBaseName

2) Создаем конфигурационный файл: config.properties в проекте
3) В файлике указываем параметры:
#Default connection settings
url=jdbc:sqlserver://localhost;databaseName=SpectrAeroNew
user=sa
password=123456

4) Для подключения к бд sql server необходимо скачать: sqljdbc42.jar и добавить в проект файл: sqljdbc42.jar

5) Создаем класс для рабоыт с бд:
public SqlConn() throws Exception {
	Properties properties = new Properties();
	properties.load(new FileInputStream("config.properties"));

	url = properties.getProperty("url");
	user = properties.getProperty("user");
	password = properties.getProperty("password");

	connection = DriverManager.getConnection(url, user, password);

	System.out.println("Data base connection success!");
}

6) Читаем конфиг:
	Properties properties = new Properties();
	properties.load(new FileInputStream("config.properties"));

7) Создаем методы для подключения/отключеняи бд
private void openConnection() throws SQLException {
	connection = DriverManager.getConnection(url, user, password);
}
private void closeConnection() {
	try {
		resultSet.close();
		connection.close();
	} catch (SQLException e) {
		e.printStackTrace();
	}
}

8) Создание statment
Statement statment = connection.createStatment();

- запрос к бд
ResultSet resultSet = statment.executeQuery("select * from ...");
- проход по циклу полученных значений
while (resultSet.next()) { //todo something }
- получение зачения столбца:
while (resultSet.next()) { System.out.println(resultSet.getString("column_name")); }

9) Для обновления, редактирования, удаления используется:
executeUpdate(<query>);

10) Для защиты от sql иньекций и валидации параметров используется:
PreparedStatement prepareStatment = connection.preparedStatment(select * from <TABLE> where cost > ?);
Где знак вопроса("?") - некий подставляемый параметр

11) Что бы указать подставляемый параметр:
prepareStatment.setString(<номер параметра>, <значение параметра>);
prepareStatment.setDouble(<номер параметра>, <значение параметра>);
и т.д.

12) Получение результата для PreparedStatement:
resultSet = prepareStatment.executeQuery();