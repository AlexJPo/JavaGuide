0) Color regexp
private static final String HEX_PATTERN = "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$";
private static final String RGB_PATTERN = "rgb *\\( *([0-255]{1,3}), *([0-255]{1,3}), *([0-255]{1,3}+) *\\)";
private static final String RGBA_PATTERN = "rgba *\\( *([0-255]{1,3}), *([0-255]{1,3}), *([0-255]{1,3}+), *([0]{1}[.]{1}[0-9]{1}+) *\\)";

1) RGBA
/**
 * Convert RGB with alpha channel to RGBA
 * @param r - red value. Range 0.0f - 255.0f
 * @param g - green value. Range 0.0f - 255.0f
 * @param b - blue value. Range 0.0f - 255.0f
 * @param a - alpha value. Range 0.0f - 1.0f
 */
private Color getRgba(float r, float g, float b, float a) {
	float mult = 0.00392156862745098f;
	float rgba_r = (float) mult * r;
	float rgba_g = (float) mult * g;
	float rgba_b = (float) mult * b;

	return new Color(rgba_r, rgba_g, rgba_b, a);
}

2) "red" to HEX
/**
 * Convert string color to HEX formatted string
 * @param color - string like "red", "yellow" etc.
 * @return string color in HEX format
 */
private String colorTextToHexString(String color) {
	try {
		Field field = Class.forName("java.awt.Color").getField(color);
		Color result = (Color)field.get(null);
		
		return RGBtoHex(result);
	} catch (Exception e) {
		e.printStackTrace();
	}
	
	return DEFAULT_HEADER_BACKGROUND;
}

3) RGB to HEX
/**
 * Convert RGB formatted color string to HEX formatted color string
 * @param color - string like "rgb(255, 10, 0)"
 * @return string color in HEX format
 */
private String rgbStringToHexString(String color) {
	String[] splittedColor = color.substring(color.indexOf('(') + 1, color.indexOf(')')).split("\\,");
	
	int r = Integer.parseInt(splittedColor[0].trim());
	int g = Integer.parseInt(splittedColor[1].trim());
	int b = Integer.parseInt(splittedColor[2].trim());
	
	return RGBtoHex(new Color(r, g, b));
}
/**
 * Convert RGB string format to HEX string format
 * @param color - Color object
 * @return string in HEX format
 */
private String RGBtoHex(Color colour) throws NullPointerException {
	String hexColour = Integer.toHexString(colour.getRGB() & 0xffffff);
	
	if (hexColour.length() < 6) {
	    hexColour = "000000".substring(0, 6 - hexColour.length()) + hexColour;
	}
	
	return "#" + hexColour;
}