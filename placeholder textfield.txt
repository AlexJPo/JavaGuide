package homework.helpers.textfiled;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

public class PlaceholderHelper {
	private JTextField textfiled;
	private JTable table;
	private TableModel model;
	private String placeholderText;
    
    public PlaceholderHelper(JTextField textfiled) {
       this.textfiled = textfiled;
    }
    
    public PlaceholderHelper(JTextField textfiled, String placeholderText) {
        this.textfiled = textfiled;
        this.placeholderText = placeholderText;
        
        this.textfiled.setText(placeholderText);
    }
    
    public PlaceholderHelper(JTextField textfiled, JTable table, TableModel model) {
        this.textfiled = textfiled;
        this.model = model;
        this.table = table;
    }
    
    public PlaceholderHelper(JTextField textfiled, String placeholderText, JTable table, TableModel model) {
        this.textfiled = textfiled;
        this.placeholderText = placeholderText;
        this.model = model;
        this.table = table;
        
        this.textfiled.setText(placeholderText);
    }

    private void checkFilter(String text) {
    	TableRowSorter<TableModel> tableRowSorter = new TableRowSorter<TableModel>(model);
		table.setRowSorter(tableRowSorter);
		tableRowSorter.setRowFilter(RowFilter.regexFilter(text));
    }
    
    public void setPlaceholder(final String text) {
    	this.placeholderText = text;
    	
    	textfiled.setText(text);    	    	
        textfiled.addFocusListener(new FocusListener() {
        	@Override
		    public void focusGained(FocusEvent e) {
		        if (textfiled.getText().equals(placeholderText)) {
		        	textfiled.setText("");
		        }
		    }
		    @Override
		    public void focusLost(FocusEvent e) {	    	
		    	textfiled.setText(placeholderText);
		    	checkFilter("");
		    } 
        });
        textfiled.addKeyListener(new KeyListener() {			
			@Override
			public void keyTyped(KeyEvent e) {
			}
			
			@Override
			public void keyReleased(KeyEvent e) {
			}
			
			@Override
			public void keyPressed(KeyEvent e) {
				checkFilter(textfiled.getText());
			}
		});
    }
}